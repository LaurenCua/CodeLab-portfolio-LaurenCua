import tkinter as tk
from tkinter import messagebox
from tkinter import ttk


# This is where the students file are.
def load_student_data():
    students = []
    with open("studentMarks.txt", "r") as file:
        lines = file.readlines()
        for line in lines[1:]:  # Skip the header
            student_id, name, m1, m2, m3, exam = line.strip().split(",")
            coursework_total = int(m1) + int(m2) + int(m3)
            overall_score = coursework_total + int(exam)
            percentage = round((overall_score / 160) * 100, 2)
            grade = calculate_grade(percentage)
            students.append({
                "id": student_id,
                "name": name,
                "coursework": coursework_total,
                "exam": int(exam),
                "percentage": percentage,
                "grade": grade
            })
    return students


# This is where we calculate the grade of the students.
def calculate_grade(percentage):
    if percentage >= 70:
        return "A"
    elif percentage >= 60:
        return "B"
    elif percentage >= 50:
        return "C"
    elif percentage >= 40:
        return "D"
    else:
        return "F"


# All the discord list.
def view_all_records():
    output = ""
    total_percentage = 0
    for student in student_data:
        output += (
            f"Name: {student['name']}\n"
            f"ID: {student['id']}\n"
            f"Coursework: {student['coursework']} / 60\n"
            f"Exam: {student['exam']} / 100\n"
            f"Overall: {student['percentage']}% (Grade: {student['grade']})\n\n"
        )
        total_percentage += student["percentage"]
    average_percentage = round(total_percentage / len(student_data), 2)
    output += f"Number of Students: {len(student_data)}\n"
    output += f"Average Percentage: {average_percentage}%"
    result_label.config(text=output)


# You can see the students record.
def view_individual_record():
    selected_name = student_selector.get()
    for student in student_data:
        if student["name"] == selected_name:
            output = (
                f"Name: {student['name']}\n"
                f"ID: {student['id']}\n"
                f"Coursework: {student['coursework']} / 60\n"
                f"Exam: {student['exam']} / 100\n"
                f"Overall: {student['percentage']}% (Grade: {student['grade']})"
            )
            result_label.config(text=output)
            return
    messagebox.showerror("Error", "Student not found!")


# The students with the highest percentage.
def highest_score():
    highest = max(student_data, key=lambda s: s["percentage"])
    output = (
        f"Name: {highest['name']}\n"
        f"ID: {highest['id']}\n"
        f"Coursework: {highest['coursework']} / 60\n"
        f"Exam: {highest['exam']} / 100\n"
        f"Overall: {highest['percentage']}% (Grade: {highest['grade']})"
    )
    result_label.config(text=output)


# Display the student with the lowest overall score
def lowest_score():
    lowest = min(student_data, key=lambda s: s["percentage"])
    output = (
        f"Name: {lowest['name']}\n"
        f"ID: {lowest['id']}\n"
        f"Coursework: {lowest['coursework']} / 60\n"
        f"Exam: {lowest['exam']} / 100\n"
        f"Overall: {lowest['percentage']}% (Grade: {lowest['grade']})"
    )
    result_label.config(text=output)


# The GUI Setup
root = tk.Tk()
root.title("Student Marks Manager")
root.geometry("600x500")
root.configure(bg="green")

# Load student data
student_data = load_student_data()
student_names = [student["name"] for student in student_data]

# Widgets
title_label = tk.Label(root, text="Student Marks Manager", font=("Helvetica", 20, "bold"), bg="green", fg="white")
title_label.pack(pady=10)

menu_frame = tk.Frame(root, bg="green")
menu_frame.pack(pady=20)

view_all_button = tk.Button(menu_frame, text="View All Records", command=view_all_records, bg="black", fg="white", font=("Helvetica", 12))
view_all_button.grid(row=0, column=0, padx=10, pady=5)

highest_button = tk.Button(menu_frame, text="Highest Score", command=highest_score, bg="black", fg="white", font=("Helvetica", 12))
highest_button.grid(row=0, column=1, padx=10, pady=5)

lowest_button = tk.Button(menu_frame, text="Lowest Score", command=lowest_score, bg="black", fg="white", font=("Helvetica", 12))
lowest_button.grid(row=0, column=2, padx=10, pady=5)

# The selected students
student_selector = ttk.Combobox(root, values=student_names, font=("Helvetica", 12))
student_selector.set("Select a Student")
student_selector.pack(pady=10)

view_individual_button = tk.Button(root, text="View Individual Record", command=view_individual_record, bg="black", fg="white", font=("Helvetica", 12))
view_individual_button.pack(pady=10)

result_label = tk.Label(root, text="", font=("Helvetica", 12), bg="green", fg="white", justify="left", wraplength=580)
result_label.pack(pady=20)

root.mainloop()





AND THIS IS THE TEXT.[ studentMarks.txt ]
10
1345,John Curry,8,15,7,45
2345,Sam Sturtivant,14,15,14,77
9876,Lee Scott,17,11,16,99
3724,Matt Thompson,19,11,15,81
1212,Ron Herrema,14,17,18,66
8439,Jake Hobbs,10,11,10,43
2344,Jo Hyde,6,15,10,55
9384,Gareth Southgate,5,6,8,33
8327,Alan Shearer,20,20,20,100
2983,Les Ferdinand,15,17,18,92
